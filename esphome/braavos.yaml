substitutions:
  name: braavos
  capital_name: Braavos

esphome:
  name: ${name}
  includes:
    - veml6075.h
  libraries:
    - "Wire"
    - "SparkFun VEML6075 Arduino Library"

esp32:
  board: esp32dev

web_server:
  port: 80

logger:

api:
  services:
    - service: mhz19_calibrate_zero
      then:
        - mhz19.calibrate_zero: ${name}_mh_z19_co2

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: ${capital_name} Fallback Hotspot
    password: "jh2vdw@Yt873KK"

captive_portal:

i2c:
  sda: 21
  scl: 22
  scan: true

uart:
  - id: co2
    rx_pin: GPIO16
    tx_pin: GPIO17
    baud_rate: 9600
  - id: particulate_matter
    rx_pin: GPIO32
    tx_pin: GPIO33
    baud_rate: 9600

# esp32_ble_tracker:
#   scan_parameters:
#     active: true

# bluetooth_proxy:

# bme680_bsec:
#   address: 0x77
#   temperature_offset: 0
#   iaq_mode: static
#   sample_rate: lp
#   state_save_interval: 1min

binary_sensor:
  - platform: status
    name: ${capital_name} Status
    id: ${capital_name}_status

text_sensor:
  - platform: template
    name: ${capital_name} Uptime Human Readable
    id: uptime_human
    icon: mdi:clock-start
    update_interval: 60s

  - platform: version
    name: ${capital_name} version

  - platform: wifi_info
    ip_address:
      name: ${capital_name} IP
      update_interval: 60s
    ssid:
      name: ${capital_name} SSID
      update_interval: 1h
    bssid:
      name: ${capital_name} BSSID
      update_interval: 1h

  # - platform: bme680_bsec
  #   iaq_accuracy:
  #     name: ${capital_name} BME680 IAQ Accuracy

sensor:
  - platform: wifi_signal
    name: ${capital_name} WiFi Signal
    update_interval: 60s

  - platform: uptime
    name: ${capital_name} Uptime Sensor

  - platform: uptime
    name: ${capital_name} Uptime Sensor Human
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

  # - platform: bme680_bsec
  #   temperature:
  #     name: ${capital_name} BME680 Temperature
  #     filters:
  #       - median
  #   pressure:
  #     name: ${capital_name} BME680 Pressure
  #     filters:
  #       - median
  #   humidity:
  #     name: ${capital_name} BME680 Humidity
  #     filters:
  #       - median
  #   gas_resistance:
  #     name: ${capital_name} BME680 Gas Resistance
  #     filters:
  #       - median
  #   iaq:
  #     name: ${capital_name} BME680 IAQ
  #     filters:
  #       - median
  #   iaq_accuracy:
  #     name: ${capital_name} BME680 IAQ Accuracy Numeric
  #   co2_equivalent:
  #     name: ${capital_name} BME680 CO2 Equivalent
  #     filters:
  #       - median
  #   breath_voc_equivalent:
  #     name: ${capital_name} BME680 Breath VOC Equivalent
  #     filters:
  #       - median

  - platform: bme280
    address: 0x76
    update_interval: 5s
    temperature:
      name: ${capital_name} BME280 Temperature
      filters: &bme280_filters
        - sliding_window_moving_average:
            window_size: 3
            send_every: 3
            send_first_at: 3
    pressure:
      name: ${capital_name} BME280 Pressure
      filters: *bme280_filters
    humidity:
      name: ${capital_name} BME280 Humidity
      filters: *bme280_filters

  - platform: bh1750
    address: 0x23
    name: ${capital_name} BH1750 Illuminance
    update_interval: 5s
    accuracy_decimals: 0
    filters:
      - sliding_window_moving_average:
          window_size: 3
          send_every: 3
          send_first_at: 3

  - platform: max44009
    name: ${capital_name} GY49 Illuminance
    update_interval: 5s
    mode: continuous
    accuracy_decimals: 0
    filters:
      - sliding_window_moving_average:
          window_size: 3
          send_every: 3
          send_first_at: 3

  - platform: custom
    lambda: |-
      auto VEML6075 = new VEML6075Sensor(5000);
      App.register_component(VEML6075);
      return {VEML6075->uva_sensor, VEML6075->uvb_sensor, VEML6075->uvi_sensor};
    sensors:
      - name: ${capital_name} UVA - 350-375nm
        unit_of_measurement: W/m2
        accuracy_decimals: 1
        filters: &veml6075_filters
          - sliding_window_moving_average:
              window_size: 3
              send_every: 3
              send_first_at: 3
      - name: ${capital_name} UVB - 315-340nm
        unit_of_measurement: W/m2
        accuracy_decimals: 1
        filters: *veml6075_filters
      - name: ${capital_name} UV Index
        unit_of_measurement: uvi
        accuracy_decimals: 1
        filters: *veml6075_filters

  - platform: mhz19
    id: ${name}_mh_z19_co2
    uart_id: co2
    update_interval: 5s
    co2:
      name: ${capital_name} MH-Z19 CO2
      filters: &mhz19_filters
        - sliding_window_moving_average:
            window_size: 3
            send_every: 3
            send_first_at: 3
    temperature:
      name: ${capital_name} MH-Z19 Temperature
      filters: *mhz19_filters
    automatic_baseline_calibration: false

  - platform: pmsx003
    uart_id: particulate_matter
    type: PMSX003
    update_interval: 30s
    pm_1_0:
      name: ${capital_name} Particulate Matter <1.0µm Concentration
      filters: &particulate_filters
        - sliding_window_moving_average:
            window_size: 30
            send_every: 30
            send_first_at: 30
    pm_2_5:
      name: ${capital_name} Particulate Matter <2.5µm Concentration
      filters: *particulate_filters
    pm_10_0:
      name: ${capital_name} Particulate Matter <10.0µm Concentration
      filters: *particulate_filters
    pm_0_3um:
      name: ${capital_name} Particulate Matter >0.3µm / 0.1L
      filters: *particulate_filters
    pm_0_5um:
      name: ${capital_name} Particulate Matter >0.5µm / 0.1L
      filters: *particulate_filters
    pm_1_0um:
      name: ${capital_name} Particulate Matter >1.0µm / 0.1L
      filters: *particulate_filters
    pm_2_5um:
      name: ${capital_name} Particulate Matter >2.5µm / 0.1L
      filters: *particulate_filters
    pm_5_0um:
      name: ${capital_name} Particulate Matter >5.0µm / 0.1L
      filters: *particulate_filters
    pm_10_0um:
      name: ${capital_name} Particulate Matter >10.0µm / 0.1L
      filters: *particulate_filters

switch:
  - platform: gpio
    name: ${capital_name} Relay
    pin: GPIO18
    inverted: true

  - platform: restart
    name: ${capital_name} Restart
